{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","SpacerXLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLink","img","Mint","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","mintAmount","setMintAmount","getData","useEffect","style","padding","backgroundColor","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","Number","onClick","e","preventDefault","window","ethereum","metamaskIsInstalled","isMetaMask","request","method","Web3EthContract","setProvider","Web3","accounts","SmartContractObj","SmartContract","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","_amount","mint","send","gasLimit","to","from","value","utils","toWei","toString","once","err","then","receipt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.acd15d05.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/TBCNFTABI.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    await window.ethereum.request({\r\n      method: \"eth_requestAccounts\",\r\n  });\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 1) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0xD53ecE799CD3576c8eB4926982256C79d25dce80\" // ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--black);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n\theight: 8px;\r\n\twidth: 8px;\r\n`\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n\theight: 16px;\r\n\twidth: 16px;\r\n`\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n\theight: 24px;\r\n\twidth: 24px;\r\n`\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n\theight: 32px;\r\n\twidth: 32px;\r\n`\r\n\r\nexport const SpacerXLarge = styled.div`\r\n\theight: 32px;\r\n\twidth: 200px;\r\n`\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex: ${({ flex }) => (flex ? flex : 0)};\r\n\tflex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n\tjustify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n\talign-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n\tbackground-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n\twidth: 100%;\r\n\tbackground-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n`\r\n\r\nexport const TextTitle = styled.p`\r\n\tcolor: var(--primary-text);\r\n\tfont-size: 22px;\r\n\tfont-weight: 500;\r\n\tline-height: 1.6;\r\n`\r\n\r\nexport const TextSubTitle = styled.p`\r\n\tcolor: var(--primary-text);\r\n\tfont-size: 18px;\r\n\tline-height: 1.6;\r\n`\r\n\r\nexport const TextDescription = styled.p`\r\n\tcolor: var(--primary-text);\r\n\tfont-size: 16px;\r\n\tline-height: 1.6;\r\n`\r\n\r\nexport const StyledClickable = styled.div`\r\n\t:active {\r\n\t\topacity: 0.6;\r\n\t}\r\n`\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n\tpadding: 10px;\r\n\tborder-radius: 50px;\r\n\tborder: none;\r\n\tbackground-color: var(--secondary);\r\n\tpadding: 10px;\r\n\tfont-weight: bold;\r\n\tcolor: var(--secondary-text);\r\n\twidth: 100px;\r\n\tcursor: pointer;\r\n\tbox-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n\t-webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n\t-moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n\t:active {\r\n\t\tbox-shadow: none;\r\n\t\t-webkit-box-shadow: none;\r\n\t\t-moz-box-shadow: none;\r\n\t}\r\n`\r\n\r\nexport const StyledRoundButton = styled.button`\r\n\tpadding: 10px;\r\n\tborder-radius: 100%;\r\n\tborder: none;\r\n\tpadding: 10px;\r\n\tfont-weight: bold;\r\n\tfont-size: 15px;\r\n\tcolor: var(--primary-text);\r\n\twidth: 30px;\r\n\theight: 30px;\r\n\tcursor: pointer;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbox-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n\t-webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n\t-moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n\t:active {\r\n\t\tbox-shadow: none;\r\n\t\t-webkit-box-shadow: none;\r\n\t\t-moz-box-shadow: none;\r\n\t}\r\n`\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex: 1;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: stretched;\r\n\twidth: 50%;\r\n\t@media (min-width: 767px) {\r\n\t\tflex-direction: row;\r\n\t}\r\n`\r\n\r\nexport const StyledLogo = styled.img`\r\n\twidth: 200px;\r\n\t@media (min-width: 767px) {\r\n\t\twidth: 300px;\r\n\t}\r\n\ttransition: width 0.5s;\r\n\ttransition: height 0.5s;\r\n`\r\n\r\nexport const StyledImg = styled.img`\r\n\tbox-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n\tborder: 4px dashed var(--secondary);\r\n\tbackground-color: var(--accent);\r\n\tborder-radius: 100%;\r\n\twidth: 200px;\r\n\t@media (min-width: 900px) {\r\n\t\twidth: 250px;\r\n\t}\r\n\t@media (min-width: 1000px) {\r\n\t\twidth: 300px;\r\n\t}\r\n\ttransition: width 0.5s;\r\n`\r\n\r\nexport const StyledLink = styled.a`\r\n\tcolor: var(--secondary);\r\n\ttext-decoration: none;\r\n  `\r\n\r\nfunction Mint() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"Click buy to mint your NFT.\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [mintAmount, setMintAmount] = useState(1)\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Gorilla Club...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      .send({\r\n        gasLimit: \"285000\",\r\n        to: \"0xD53ecE799CD3576c8eB4926982256C79d25dce80\", // CHANGE YOUR WALLET ADDRESS HERE\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((0.05 * _amount).toString(), \"ether\"), // YOUR NFT PRICE\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"WOW, you now own a Gorilla Club. go visit Opensea.io to view it.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n  const decrementMintAmount = () => {\r\n\t\tlet newMintAmount = mintAmount - 1\r\n\t\tif (newMintAmount < 1) {\r\n\t\t\tnewMintAmount = 1\r\n\t\t}\r\n\t\tsetMintAmount(newMintAmount)\r\n\t}\r\n\r\n\tconst incrementMintAmount = () => {\r\n\t\tlet newMintAmount = mintAmount + 1\r\n\t\tif (newMintAmount > 10) {\r\n\t\t\tnewMintAmount = 10\r\n\t\t}\r\n\t\tsetMintAmount(newMintAmount)\r\n\t}\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\nreturn (\r\n  <s.Screen>\r\n    <s.Container\r\n      flex={1}\r\n      ai={\"center\"}\r\n      style={{ padding: 24 }}\r\n      image=\"/config/images/bg.png\"\r\n    >\r\n      {/* <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} /> */}\r\n      <s.SpacerXLarge />\r\n      <s.SpacerXLarge />\r\n      <s.SpacerXLarge />\r\n      <s.SpacerXLarge />\r\n      <s.SpacerMedium />\r\n\r\n      <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n        {/* <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n          <StyledImg\r\n            alt={\"example\"}\r\n            src={\"/config/images/example.gif\"}\r\n          />\r\n        </s.Container> */}\r\n        {/* <s.SpacerXLarge flex={1} jc={\"center\"} ai={\"center\"} /> */}\r\n        <s.SpacerLarge />\r\n        <s.Container\r\n          flex={2}\r\n          jc={\"center\"}\r\n          ai={\"center\"}\r\n          style={{\r\n            backgroundColor: \"var(--accent)\",\r\n            padding: 24,\r\n            borderRadius: 24,\r\n            border: \"4px\",\r\n            boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n          }}\r\n        >\r\n          <s.TextTitle\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: 50,\r\n              fontWeight: \"bold\",\r\n              color: \"var(--accent-text)\",\r\n            }}\r\n          >\r\n            Gorilla Club NFT Mint\r\n            {/* {data.totalSupply} / {CONFIG.MAX_SUPPLY} */}\r\n          </s.TextTitle>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            <StyledLink\r\n              target={\"_blank\"}\r\n              href=\"\" // LINK \r\n            >\r\n              0x3edc8437dbe93...\r\n            </StyledLink>\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          {Number(data.totalSupply) >= 10000 ? (\r\n            <>\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  color: \"var(--accent-text)\",\r\n                }}\r\n              >\r\n                The sale has ended.\r\n              </s.TextTitle>\r\n              <s.TextDescription\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  color: \"var(--accent-text)\",\r\n                }}\r\n              >\r\n                You can still find GC on\r\n              </s.TextDescription>\r\n              <s.SpacerSmall />\r\n              <StyledLink\r\n                target={\"_blank\"}\r\n                href=\"\"\r\n              >\r\n                Opensea\r\n              </StyledLink>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <s.TextTitle\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  color: \"var(--accent-text)\",\r\n                }}\r\n              >\r\n                1 GC costs{\" \"}\r\n                0.05{\" \"}\r\n                ETH.\r\n              </s.TextTitle>\r\n              <s.SpacerXSmall />\r\n              <s.TextDescription\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  color: \"var(--accent-text)\",\r\n                }}\r\n              >\r\n                Excluding gas fees.\r\n              </s.TextDescription>\r\n              <s.SpacerSmall />\r\n              {blockchain.account === \"\" ||\r\n              blockchain.smartContract === null ? (\r\n                <s.Container ai={\"center\"} jc={\"center\"}>\r\n                  <s.TextDescription\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      color: \"var(--accent-text)\",\r\n                    }}\r\n                  >\r\n                    Connect to the Ethereum{\" \"}\r\n                    network\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledButton\r\n                    onClick={(e) => {\r\n                      e.preventDefault()\r\n                      dispatch(connect())\r\n                      getData()\r\n                    }}\r\n                  >\r\n                    CONNECT\r\n                  </StyledButton>\r\n                  {/*<StyledButton*/}\r\n                  {/*\tonClick={(e) => {*/}\r\n                  {/*\t\te.preventDefault();*/}\r\n                  {/*\t\tverify('asdf')*/}\r\n                  {/*\t\t\t.then((v) => {*/}\r\n                  {/*\t\t\t\tconsole.log(v);*/}\r\n                  {/*\t\t\t});*/}\r\n                  {/*\t}}*/}\r\n                  {/*>*/}\r\n                  {/*\tTEST*/}\r\n                  {/*</StyledButton>*/}\r\n                  {blockchain.errorMsg !== \"\" ? (\r\n                    <>\r\n                      <s.SpacerSmall />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {blockchain.errorMsg}\r\n                      </s.TextDescription>\r\n                    </>\r\n                  ) : null}\r\n                </s.Container>\r\n              ) : (\r\n                <>\r\n                  <s.TextDescription\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      color: \"var(--accent-text)\",\r\n                    }}\r\n                  >\r\n                    {feedback}\r\n                  </s.TextDescription>\r\n                  <s.SpacerMedium />\r\n                  <s.Container\r\n                    ai={\"center\"}\r\n                    jc={\"center\"}\r\n                    fd={\"row\"}\r\n                  >\r\n                    <StyledRoundButton\r\n                      style={{ lineHeight: 0.4 }}\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault()\r\n                        decrementMintAmount()\r\n                      }}\r\n                    >\r\n                      -\r\n                    </StyledRoundButton>\r\n                    <s.SpacerMedium />\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {mintAmount}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <StyledRoundButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault()\r\n                        incrementMintAmount()\r\n                      }}\r\n                    >\r\n                      +\r\n                    </StyledRoundButton>\r\n                  </s.Container>\r\n                  <s.SpacerSmall />\r\n                  <s.Container\r\n                    ai={\"center\"}\r\n                    jc={\"center\"}\r\n                    fd={\"row\"}\r\n                  >\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault()\r\n                        claimNFTs(mintAmount)\r\n                        getData()\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"BUY\"}\r\n                    </StyledButton>\r\n                  </s.Container>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n          <s.SpacerMedium />\r\n        </s.Container>\r\n        <s.SpacerLarge />\r\n        {/* <s.SpacerXLarge flex={1} jc={\"center\"} ai={\"center\"} /> */}\r\n\r\n        {/* <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n          <StyledImg\r\n            alt={\"example\"}\r\n            src={\"/config/images/example.gif\"}\r\n            style={{ transform: \"scaleX(-1)\" }}\r\n          />\r\n        </s.Container> */}\r\n      </ResponsiveWrapper>\r\n      <s.SpacerMedium />\r\n      <s.Container\r\n        jc={\"center\"}\r\n        ai={\"center\"}\r\n        style={{ width: \"70%\" }}\r\n      >\r\n        <s.TextDescription\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"var(--primary-text)\",\r\n          }}\r\n        >\r\n          Please make sure you are connected to the right network\r\n          (Ethereum Mainnet) and the correct address.\r\n          Please note: Once you make the purchase, you cannot undo\r\n          this action.\r\n        </s.TextDescription>\r\n        {/* <s.SpacerSmall />\r\n        <s.TextDescription\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"var(--primary-text)\",\r\n          }}\r\n        >\r\n          We have set the gas limit to {CONFIG.GAS_LIMIT} for the\r\n          contract to successfully mint your NFT. We recommend\r\n          that you don't lower the gas limit.\r\n        </s.TextDescription> */}\r\n      </s.Container>\r\n    </s.Container>\r\n  </s.Screen>\r\n)\r\n}\r\n\r\n export default Mint;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}